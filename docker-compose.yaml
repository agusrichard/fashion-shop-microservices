version: "3.7"
services:
  nginx:
    image: nginx:1.20.0
    container_name: fashion-shop-microservices-nginx
    volumes:
      - ./:/var/www
      - ./default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    networks:
      - fashion-shop-microservices
    depends_on:
      - auth-service
  auth-service:
    build:
      context: ./
      dockerfile: ./auth-service/Dockerfile
    container_name: fashion-shop-microservices-auth-service
    command: bash -c "python auth-service/auth_service/manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./:/var/www/auth-service
    ports:
      - 8000:8000
    networks:
      - fashion-shop-microservices
    depends_on:
      - auth-service-db
  auth-service-db:
    image: postgres:13.2
    container_name: fashion-shop-microservices-auth-service-db
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${AUTH_SERVICE_USER}
      - POSTGRES_PASSWORD=${AUTH_SERVICE_PASSWORD}
      - POSTGRES_DB=${AUTH_SERVICE_DB}
    volumes:
      - auth-data:/var/lib/postgresql/data
    networks:
      - fashion-shop-microservices
  new-service:
    build:
      context: ./
      dockerfile: ./new-service/Dockerfile
    container_name: fashion-shop-microservices-new-service
    command: flask run --host=0.0.0.0 --port=5000
    environment:
      - FLASK_ENV=development
      - FLASK_APP=./new-service/app.py
    volumes:
      - ./:/var/www/new-service
    ports:
      - 5000:5000
    networks:
      - fashion-shop-microservices
volumes:
  auth-data:
    driver: local

networks:
  fashion-shop-microservices:
